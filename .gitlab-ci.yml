stages:
  - lint
  - test
  - build
  - test-e2e
  - deploy

include:
  - project: 'cocainefarm/templates/ci'
    file: '/container.base.yaml'

default:
  tags:
    - k8s

.cache_backend: &cache_backend
  cache:
    key:
      files:
        - backend/package.json
    paths:
      - ${CI_PROJECT_DIR}/backend/node_modules
      - /usr/local/share/.cache/yarn/v6

.cache_frontend: &cache_frontend
  cache:
    key:
      files:
        - frontend/package.json
    paths:
      - ${CI_PROJECT_DIR}/frontend/node_modules
      - /usr/local/share/.cache/yarn/v6

##################################################
# TEST

variables:
  BASE_IMAGE: node:15.1.0-alpine

.lint:
  image: $BASE_IMAGE
  stage: lint
  script:
    - yarn install
    - yarn lint

backend:eslint:
  extends: .lint
  <<: *cache_backend
  before_script:
    - cd backend

frontend:eslint:
  extends: .lint
  <<: *cache_frontend
  before_script:
    - cd frontend

.test:
  image: $BASE_IMAGE
  stage: test

backend:tsc:
  extends: .test
  <<: *cache_backend
  script:
    - cd backend
    - yarn install
    - yarn run tsc


##################################################
# BUILD

build:backend:lmrdashboard:
  extends: .container:base
  stage: build
  <<: *cache_backend
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_SHORT_SHA}"
    BUILD_PATH: "backend/"

build:backend:tags:
  extends: .container:base
  stage: build
  <<: *cache_backend
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_TAG} kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:latest"
    BUILD_PATH: "backend/"
  only:
    refs:
      - tags


build:frontend:lmrdashboard:
  extends: .container:base
  stage: build
  <<: *cache_frontend
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:${CI_COMMIT_SHORT_SHA}"
    BUILD_PATH: "frontend/"
    BUILD_ARGS: "NEXT_PUBLIC_LMRD_EVENT_SOURCE=https://lmr.staging.cocaine.farm/api/test"

build:frontend:tags:
  extends: .container:base
  stage: build
  <<: *cache_frontend
  variables:
    DESTINATION: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:${CI_COMMIT_TAG} kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:latest"
    BUILD_PATH: "frontend/"
    BUILD_ARGS: "NEXT_PUBLIC_LMRD_EVENT_SOURCE=https://lmr.cocaine.farm/api/test"
  only:
    refs:
      - tags


##################################################
# E2E TEST
test:e2e:
  stage: test-e2e
  image: $BASE_IMAGE
  services: 
    - name: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-backend:${CI_COMMIT_SHORT_SHA}"
      alias: backend
    - name: "kube.cat/${CI_KUBECAT_NAMESPACE}/${CI_PROJECT_NAME}-frontend:${CI_COMMIT_SHORT_SHA}"
      alias: frontend
    - name: mariadb:latest
      alias: db
  variables:
    MYSQL_ROOT_PASSWORD: "root"
    MYSQL_DATABASE: "lmrd"
    LMRD_DB_HOST: "db"
    LMRD_DB_USER: "root"
    LMRD_DB_PASS: "root"
    LMRD_DB_NAME: "lmrd"
    LMRD_IRC_CHANNEL: "#aboftytest"
    # Ideally the event source should be this, but it's already defined as a build arg 
    # when the image is pushed to the registry, can it be overwritten?
    NEXT_PUBLIC_LMRD_EVENT_SOURCE: "http://localhost:4000/test"  # Or http://backend:4000/test
  # Ports ?! https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2460
  # Having 3000 for the frontend and 4000 for the backend exposed/mapped, just like in the
  # docker-compose would be great.
  # The backend container file already exposes 4000 so maybe a mapping isn't needed there.
  # The frontend container file exposes only 80 by default due to nginx, but that could be used as well
  # if the base URL is changed/dynamic to e.g. http://frontend:80 in cypress.
  script: 
    - cd frontend
    - yarn cy:run


##################################################
# DEPLOY

deploy:production:
  image: kube.cat/cocainefarm/helmfile:v0.135.0
  stage: deploy
  needs:
    - build:frontend:tags
    - build:backend:tags
  environment:
    name: production
    url: https://lmr.cocaine.farm
  before_script:
    - gpg --import "$COCAINEFARM_GPG_PRIVKEY"
  script:
    - helmfile -e production apply
  only:
    refs:
      - tags

deploy:staging:
  image: kube.cat/cocainefarm/helmfile:v0.135.0
  stage: deploy
  needs:
    - build:frontend:lmrdashboard
    - build:backend:lmrdashboard
  environment:
    name: staging
    url: https://lmr.staging.cocaine.farm
  before_script:
    - gpg --import "$COCAINEFARM_GPG_PRIVKEY"
  script:
    - helmfile -e staging apply
  only:
    refs:
      - lmrdashboard
